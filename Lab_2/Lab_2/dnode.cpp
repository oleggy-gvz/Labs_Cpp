#include "dnode.h"

// конструктор с инициализацией данных
DNode::DNode(CPolygon& p) : data(&p)
{
	key = data->GetCountVertexes(); // ключ - кол-во вершин в многоугольнике;
}

// добавление эл-та в справа от текущего элемента
void DNode::InsertRight(DNode *p)
{
	// установка указателей у вставляемого нового элемента
	p->right = right; // правый указ. ссылается на старый правый элемент
	p->left = this; // левый указ. ссылается на текущий элемент

	// обновл. указатели у старых эл-тов для включения нового элемента
	// левый указ. у старого правого элемента ссылается на вставляемый новый элемент
	if (right != NULL) right->left = p;
	right = p; // правый указ. у текущего элемента ссылается на вставляемый новый элемент
}

// добавление эл-та слева от текущего элемента
void DNode::InsertLeft(DNode *p)
{
	// установка указателей у вставляемого нового элемента
	p->left = left; // левый указ. ссылается на старый левый элемент
	p->right = this; // правый указ. ссылается на текущий элемент

	// обновл. указатели у старых эл-тов для включения нового элемента
	if (left != NULL) left->right = p; // правый указ. у старого левого элемента ссылается на вставляемый новый элемент
	left = p; // левый указ. у текущего элемента ссылается на вставляемый новый элемент
}

// удаление текущего элемента
DNode *DNode::Delete()
{
	// у левого эл-та его правый указ. ссылается на правый указ. текущего элемента
	if (left != NULL) left->right = right;
	// у правого эл-та его левый указ. ссылается на левый указ. текущего элемента
	if (right != NULL) right->left = left;

	return this;
}

// возврат указателя на элемент справа от текущего элемента
DNode *DNode::NextRight() const
{
	return right;
}

// возврат указателя на элемент слева от текущего элемента
DNode *DNode::NextLeft() const
{
	return left;
}

CPolygon *DNode::GetData()
{
	return data;
}

int DNode::GetKey() const
{
	return key;
}

